from . import db
from flask_login import UserMixin
from sqlalchemy.sql import func
import datetime

class Demo(db.Model):
    id = db.Column(db.Integer,primary_key=True)
    fname = db.Column(db.String(50))
    lname = db.Column(db.String(50))
    maiden = db.Column(db.String(50))
    sbid = db.Column(db.Integer)
    position = db.Column(db.String(50))
    linenum = db.Column(db.Integer)
    dept = db.Column(db.String(50))
    ccnn = db.Column(db.String(50))
    salary = db.Column(db.String(50))
    appt = db.Column(db.String(50))
    hiredate = db.Column(db.String(50))
    apptdate = db.Column(db.String(50))
    supervisor = db.Column(db.String(50))
    sbemail = db.Column(db.String(50))
    home = db.Column(db.String(50))
    city = db.Column(db.String(50))
    state = db.Column(db.String(50))
    zipcode = db.Column(db.String(50))
    hphone = db.Column(db.String(50))
    cphone = db.Column(db.String(50))
    wphone = db.Column(db.String(50))
    wext = db.Column(db.String(50))
    dob = db.Column(db.String(50))
    emergencyname = db.Column(db.String(50))
    emergencyphone = db.Column(db.String(50))
    emergencyrelation = db.Column(db.String(50))
    update = db.Column(db.String(50), default=datetime.datetime.now().strftime('%Y-%m-%d %H:%M'))
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))

class Cert(db.Model):
    id = db.Column(db.Integer,primary_key=True)
    acls_cert = db.Column(db.String(50))
    annual_trophon = db.Column(db.String(50))
    ardms = db.Column(db.String(50))
    arrt = db.Column(db.String(50))
    bls = db.Column(db.String(50))
    cci = db.Column(db.String(50))
    school1 = db.Column(db.String(50))
    edu1 = db.Column(db.String(50))
    major1 = db.Column(db.String(50))
    school2 = db.Column(db.String(50))
    edu2 = db.Column(db.String(50))
    major2 = db.Column(db.String(50))
    nurse_asst = db.Column(db.String(50))
    nysnurse_asst = db.Column(db.String(50))
    rn = db.Column(db.String(50))
    nysrn = db.Column(db.String(50))
    doh = db.Column(db.String(50))
    pals = db.Column(db.String(50))
    radiographer = db.Column(db.String(50))
    visa = db.Column(db.String(50))
    misc = db.Column(db.String(50))
    update = db.Column(db.String(50), default=datetime.datetime.now().strftime('%Y-%m-%d %H:%M'))
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))

class Clinical(db.Model):
    id = db.Column(db.Integer,primary_key=True)
    rn_na_comp = db.Column(db.String(50))
    rn_na_recert = db.Column(db.String(50))
    rn_na_orien = db.Column(db.String(50))
    linen = db.Column(db.String(50))
    linendata = db.Column(db.LargeBinary)
    pyxis = db.Column(db.String(50))
    pyxisdata = db.Column(db.LargeBinary)
    misc = db.Column(db.String(50))
    update = db.Column(db.String(50), default=datetime.datetime.now().strftime('%Y-%m-%d %H:%M'))
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))

class Emp_notes(db.Model):
    id = db.Column(db.Integer,primary_key=True)
    blood_don = db.Column(db.String(50))
    blood_dondata = db.Column(db.LargeBinary)
    cancerscreen = db.Column(db.String(50))
    cancerscreendata = db.Column(db.LargeBinary)
    issuednote = db.Column(db.String(50))
    issuednotedata = db.Column(db.LargeBinary)

    update = db.Column(db.String(50), default=datetime.datetime.now().strftime('%Y-%m-%d %H:%M'))
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))


class Form(db.Model):
    id = db.Column(db.Integer,primary_key=True)
    kronos = db.Column(db.String(50))
    kronosdata = db.Column(db.LargeBinary)
    performance = db.Column(db.String(50))
    performancedata = db.Column(db.LargeBinary)
    attestation = db.Column(db.String(50))
    attestationdata = db.Column(db.LargeBinary)
    ivcontrast = db.Column(db.String(50))
    ivcontrastdata = db.Column(db.LargeBinary)
    supportperform = db.Column(db.String(50))
    supportperformdata = db.Column(db.LargeBinary)
    couns = db.Column(db.String(50))
    counsdata = db.Column(db.LargeBinary)
    hybrid = db.Column(db.String(50))
    hybriddata = db.Column(db.LargeBinary)
    update = db.Column(db.String(50), default=datetime.datetime.now().strftime('%Y-%m-%d %H:%M'))
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))

class User(db.Model, UserMixin):
    id = db.Column(db.Integer,primary_key=True)
    email = db.Column(db.String(150),unique=True)
    password = db.Column(db.String(150))
    demo_info = db.relationship('Demo')
    cert_info = db.relationship('Cert')
    form_info = db.relationship('Form')
    clinical_info = db.relationship('Clinical')
    emp_notes_info = db.relationship('Emp_notes')

